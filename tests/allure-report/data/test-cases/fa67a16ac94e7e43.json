{"uid":"fa67a16ac94e7e43","name":"test_query_input[SELECT * FROM test_table;]","fullName":"test_routes#test_query_input","historyId":"dc533a58189d4f1f4ea8cd3c55c0730f","time":{"start":1733099620980,"stop":1733099620989,"duration":9},"description":"Test if the query input is working correctly.","descriptionHtml":"<p>Test if the query input is working correctly.</p>\n","status":"failed","statusMessage":"AssertionError: assert None\n +  where None = find(name='div', class_='result-table')\n +    where find = <!DOCTYPE html>\\n\\n<html lang=\"en\">\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The serve...s unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n</html>.find\n +      where <!DOCTYPE html>\\n\\n<html lang=\"en\">\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The serve...s unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n</html> = BeautifulSoup(b'<!doctype html>\\n<html lang=en>\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The se...nd was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n', features='html.parser')\n +        where b'<!doctype html>\\n<html lang=en>\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The se...nd was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n' = <Response [500]>.content","statusTrace":"query = 'SELECT * FROM test_table;', teardown_db = None\n\n    @pytest.mark.parametrize(\"query\", [\n        \"CREATE TABLE test_table (test varchar UNIQUE primary key);\",\n        \"INSERT INTO test_table(test) VALUES ('test_value');\",\n        \"UPDATE test_table SET test = 'new_value' WHERE test = 'test_value';\",\n        \"SELECT * FROM test_table;\",\n        \"DELETE FROM test_table WHERE test = 'new_value';\"\n    ])\n    def test_query_input(query, teardown_db):\n        \"\"\"Test if the query input is working correctly.\"\"\"\n        response = requests.post(\n            url=\"http://localhost:5001/query_input/\",\n            data={\"query\": query},\n        )\n    \n>       assert BeautifulSoup(response.content, features=\"html.parser\").find(\n            name=\"div\", class_=\"result-table\"\n        )\nE       assert None\nE        +  where None = find(name='div', class_='result-table')\nE        +    where find = <!DOCTYPE html>\\n\\n<html lang=\"en\">\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The serve...s unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n</html>.find\nE        +      where <!DOCTYPE html>\\n\\n<html lang=\"en\">\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The serve...s unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n</html> = BeautifulSoup(b'<!doctype html>\\n<html lang=en>\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The se...nd was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n', features='html.parser')\nE        +        where b'<!doctype html>\\n<html lang=en>\\n<title>500 Internal Server Error</title>\\n<h1>Internal Server Error</h1>\\n<p>The se...nd was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\\n' = <Response [500]>.content\n\ntest_routes.py:49: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"Drop table test_table for teardown","time":{"start":1733099620941,"stop":1733099620941,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"afterStages":[{"name":"Drop table test_table for teardown::0","time":{"start":1733099621019,"stop":1733099621057,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"test_routes"},{"name":"host","value":"MacBook-Pro-Andrej.local"},{"name":"thread","value":"15248-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_routes"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"query","value":"'SELECT * FROM test_table;'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"fa67a16ac94e7e43.json","parameterValues":["'SELECT * FROM test_table;'"]}